{
  "name": "getx-locale",
  "displayName": "getx_locale",
  "description": "Automatically extract and manage GetX localization keys",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.85.0"
  },
  "capabilities": {
    "languageModels": true
  },
  "categories": [
    "Other",
    "Machine Translation"
  ],
  "activationEvents": [
    "onCommand:getx-locale.extractKeys",
    "onCommand:getx-locale.scanProject",
    "onCommand:getx-locale.manageApiKey",
    "onLanguage:dart"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "getx-locale.extractKeys",
        "title": "Extract GetX Translation Keys from Current File",
        "category": "GetX Locale"
      },
      {
        "command": "getx-locale.scanProject",
        "title": "Scan Entire Project for GetX Translation Keys",
        "category": "GetX Locale"
      },
      {
        "command": "getx-locale.manageApiKey",
        "title": "Manage Translation API Keys",
        "category": "GetX Locale"
      },
      {
        "command": "getx-locale.switchProvider",
        "title": "Switch Translation Provider",
        "category": "GetX Locale"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "getx-locale.extractKeys",
          "when": "resourceExtname == .dart",
          "group": "getx-locale"
        }
      ],
      "explorer/context": [
        {
          "command": "getx-locale.scanProject",
          "group": "getx-locale"
        }
      ]
    },
    "keybindings": [
      {
        "command": "getx-locale.extractKeys",
        "key": "ctrl+shift+l",
        "mac": "cmd+shift+l",
        "when": "editorTextFocus && resourceExtname == .dart"
      }
    ],
    "configuration": {
      "title": "GetX Locale",
      "properties": {
        "getx-locale.translationProvider": {
          "type": "string",
          "enum": ["openai", "groq"],
          "enumDescriptions": [
            "Use OpenAI API (requires API key)",
            "Use Groq API with Llama model (requires API key)"
          ],
          "default": "openai",
          "description": "Select which provider to use for translations"
        },
        "getx-locale.preferredModel": {
          "type": "object",
          "properties": {
            "openai": {
              "type": "string",
              "enum": ["gpt-3.5-turbo", "gpt-4"],
              "default": "gpt-3.5-turbo",
              "description": "Select which OpenAI model to use"
            },
            "groq": {
              "type": "string",
              "enum": ["meta-llama/llama-4-scout-17b-16e-instruct"],
              "default": "meta-llama/llama-4-scout-17b-16e-instruct",
              "description": "Select which Groq model to use"
            }
          },
          "default": {
            "openai": "gpt-3.5-turbo",
            "groq": "meta-llama/llama-4-scout-17b-16e-instruct"
          },
          "description": "Configure preferred models for each provider"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.100.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3",
    "ts-loader": "^9.5.2",
    "webpack": "^5.99.7",
    "webpack-cli": "^6.0.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2"
  }
}
